#!/bin/bash
# Posts to the metafridge from the shell.

# Defaults
metafridgeURL="http://metafridge.metalab.at"
metafridgeCGI="/cgi-bin/post_text.cgi"

# If you do not want your message to go to twitter
KILLMOCKINGBIRD=0

# Normally messages are not breaking
BREAKING=0

# animation style. Default is scrollnormal
STYLE=0

USAGE="Usage: `basename $0` [-bhk][-s style] message

-b
    Breaking news message, immediately overrides existing message

-h
    Displays this help text

-k
    kill a mocking bird, do not send the message to twitter as well. (Perfect for automated jobs that only make sense when seen on location, or for testing.)

Available Styles:
    scrollnormal
    scrollfast
    scrolltoofast
    blinkslow
    blinkfast
    blinkstrobo
    sinewave
"

# Updated metafridge interface does not accept scrollup and scrolldown at the moment

# Parse command line options.
while getopts bhks: OPT; do
    case "$OPT" in
        b)
            # BREAKING NEWS message, interrupts all other messages.
            BREAKING=1
            ;;
        h)
            echo Help: $USAGE
            exit 0
            ;;
        k)
            KILLMOCKINGBIRD=1
            ;;
        s)
            PASSEDSTYLE=$OPTARG
            case "$PASSEDSTYLE" in
                scrollnormal)
                    STYLE=0
                    ;;
                scrollfast)
                    STYLE=1
                    ;;
                scrolltoofast)
                    STYLE=2
                    ;;
                blinkslow)
                    STYLE=3
                    ;;
                blinkfast)
                    STYLE=4
                    ;;
                blinkstrobo)
                    STYLE=5
                    ;;
#                scrollup)
#                    STYLE=7
#                    ;;
#                scrollup)
#                    STYLE=8
#                    ;;
                sinewave)
                    STYLE=8
                    ;;
            esac
            ;;
        \?)
            # getopts issues an error message
            echo $USAGE >&2
            exit 1
            ;;
    esac
done

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

# We want at least one non-option argument. 
# Remove this block if you don't need it.
if [ $# -eq 0 ]; then
    echo $USAGE >&2
    exit 1
fi

# Access additional arguments as usual through 
# variables $@, $*, $1, $2, etc. or using this loop:
#for PARAM; do
#    echo $PARAM
#done

MESSAGE="$*"
curl -v "${metafridgeURL}${metafridgeCGI}" --data "killmockingbird=$KILLMOCKINGBIRD"  --data "effect=${STYLE}"  --get --data-urlencode "scroll_text=${MESSAGE}" --data "breaking_msg=$BREAKING" 

# EOF
